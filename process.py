import sys
import numpy as np
import csv
ticks = np.array([[572.7,357.7],[589.3,350],[606,341.7],[620.7,334.3],[636.5,326],[654,318],[667.5,310.5],[683,302],[698,294.5],[714,287],[729,279],[745,271.5],[759.5,264],[775.5,256],[793,248],[807.5,240],[821.5,233.5],[838.2,225.8],[854.8,217.5],[869.5,210.2],[885.3,201.8],[902.8,193.8],[916.3,186.3],[931.8,177.8],[946.8,170.3],[962.8,162.8],[977.8,154.8],[993.8,147.3],[1008.3,139.8],[1024.3,131.8],[1041.8,123.8],[1056.3,115.8],[1070.3,109.3],[1087,101.7],[1103.7,93.3],[1118.3,86],[1134.2,77.7],[1151.7,69.7],[1165.2,62.2],[1180.7,53.7],[1195.7,46.2],[1211.7,38.7],[1226.7,30.7],[1242.7,23.2],[1257.2,15.7],[1273.2,7.7],[1290.7,-0.3],[1305.2,-8.3],[1319.2,-14.8],[1335.8,-22.5],[1352.5,-30.8],[1367.2,-38.2],[1383,-46.5],[1400.5,-54.5],[1414,-62],[1429.5,-70.5],[1444.5,-78],[1460.5,-85.5],[1475.5,-93.5],[1491.5,-101],[1506,-108.5],[1522,-116.5],[1539.5,-124.5],[1554,-132.5],[1568,-139],[1584.7,-146.7],[1601.3,-155],[1616,-162.3],[1631.8,-170.7],[1649.3,-178.7]])
P = np.array([
	[1315 - 934, 302 - 934], # right-down
	[1403 - 825, 1191 - 37] # left-down
]).T # maps from z to x space
Pinv = np.linalg.inv(P)
z_ticks = np.dot(Pinv, ticks.T).T

# re_z1_0 = np.dot(Pinv, [838.2,162.8])[1]
# im_z1_0 = np.dot(Pinv, [827,418])[1]

for fname in sys.argv[1:]:
	with open(fname, 'r') as f:
		with open('%s_out.csv' % fname[:-4], 'w') as g:
			csv_r = csv.reader(f)
			next(csv_r)
			def find_z0(z):
				for i, z_tick in enumerate(z_ticks):
					if z_tick[0] > z[0]:
						if i > 0:
							return i - (z_tick[0] - z[0]) / (z_tick[0] - z_ticks[i-1][0])
						else:
							return 0
				return ticks.shape[0]
			
			csv_w = csv.writer(g)
			for row in csv_r:
				# if int(row[0]) > RE_THRESH and int(row[3]) > IM_THRESH:
				row = [float(r) for r in row]
				pos = np.dot(Pinv, np.array([row[2], row[1]]))
				
				csv_w.writerow([find_z0(pos)])